# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]
    paths:
      - '**.hs'
      - 'mut.cabal'
      - '.github/workflows/**/*.yml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  build:
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            ghc: '8.8'
            cabal: '3.2'
    runs-on: ubuntu-latest
    outputs:
      docdir: ${{ steps.buildstep.outputs.docdir }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: haskell/actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}
      - id: buildstep
        name: Build docs
        run: >
          ./bin/build-docs.sh | tee docdir.txt;
          echo "{docdir}={$(dirname $(cat docdir.txt | tail -1))}" >> $GITHUB_OUTPUT
      - run: echo ${{ toJSON(steps.buildstep.outputs.docdir) }}
      - uses: actions/upload-artifact@v2
        with:
          name: built-docs
          path: ${{ steps.buildstep.outputs.docdir }}
      - name: Run it
        run: cabal run
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    environment:
      name: ${{ needs.setup.outputs.var1 }}
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: built-docs
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: What's the document directory?
        run: > 
          echo ${{ needs.build.outputs.docdir }}
          ls -la
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: ${{ env.DOCDIR }}
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
