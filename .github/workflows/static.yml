# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages (or just build if not pushing to `main`)

on:
  # Runs on pushes targeting the default branch
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]
    paths:
      - '**.hs'
      - 'mut.cabal'
      - '.github/workflows/**/*.yml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  URL: /repos/${{ github.event.pull_request.head.repo.owner.login }}/${{ github.event.pull_request.head.repo.name }}/pulls/${{ github.event.pull_request.number }}

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  build:
    strategy:
      fail-fast: true
      matrix:
        include:
          - ghc: '8.8'
            cabal: '3.2'
            hlint: '3.3.6'
    runs-on: ubuntu-latest
    outputs:
      docdir: ${{ steps.buildstep.outputs.docdir }}
    steps:
      - name: test
        run: |
          echo ${{ env.URL }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install HLint
        uses: haskell/actions/hlint-setup@v2
        with:
          version: ${{ matrix.hlint }}
      - name: Run Hlint
        uses: haskell/actions/hlint-run@v2
        with:
          fail-on: error
          path: src/
      - name: Set up Haskell
        uses: haskell/actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}
      - id: buildstep
        name: Build docs
        run: |
          ./bin/build-docs.sh | tee docdir.txt
          test ${PIPESTATUS[0]} -eq 0
          echo "docdir=$(dirname $(cat docdir.txt | tail -1))" >> $GITHUB_OUTPUT
      - name: Upload docs for next step
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}-docs
          path: ${{ steps.buildstep.outputs.docdir }}
      - name: Run the thing
        run: cabal run
      - name: Upload output file for next step
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}-output
          path: ./output.md
      - name: Add commit comment if PR
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          gh api \
            --method PATCH \
            -H "Accept: application/vnd.github+json" \
            ${{ env.URL }} \
            -f body="$(cat output.md)"

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}-docs
          path: ./built-docs
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./built-docs
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1